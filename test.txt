function convertToXML() {
    const sqlInput = document.getElementById("sqlInput").value;
    const fieldListInput = document.getElementById("fieldListInput").value;

    const fieldMap = parseFieldList(fieldListInput);
    let xmlOutput = "<CLAUSE>\n";

    const tokens = sqlInput.split(/\s+/);
    let index = 0;

    while (index < tokens.length) {
        let token = tokens[index];

        // Field Mapping
        if (fieldMap[token]) {
            const fieldInfo = fieldMap[token];
            xmlOutput += `    <SQL DESC="${fieldInfo.DESC}" DATATYPE="${fieldInfo.DATATYPE}" EEType="${fieldInfo.EEType}" TYPE="FLD">${token}</SQL>\n`;
        }
        // Operand Handling
        else if (token.toUpperCase() === 'OPERAND') {
            xmlOutput += `    <SQL TYPE="OP"> ${token} </SQL>\n`;
        }
        // Value Handling
        else if (token.startsWith("'") && token.endsWith("'")) {
            xmlOutput += `    <SQL TYPE="SQL"> ' </SQL>\n`; // Opening quote
            xmlOutput += `    <SQL TYPE="OP"> ${token.slice(1, -1)} </SQL>\n`; // Value
            xmlOutput += `    <SQL TYPE="SQL"> ' </SQL>\n`; // Closing quote
        }
        // SQL Operators
        else if (token.match(/AND|OR|=|<>|>|<|IN|NOT|IS|NULL|ORDER|BY/i)) {
            xmlOutput += `    <SQL TYPE="SQL"> ${token.toUpperCase()} </SQL>\n`;
        }
        // Unmapped SQL Components
        else {
            xmlOutput += `    <SQL TYPE="SQL"> ${token} </SQL>\n`;
        }
        index++;
    }

    xmlOutput += "</CLAUSE>";
    document.getElementById("xmlOutput").textContent = xmlOutput;
}