package com.cs.ceweb.servlets;

import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.Base64;

import com.cs.core.utility.StringUtil;
import com.sun.xml.internal.messaging.saaj.packaging.mime.internet.MimeUtility;

public class Base64ToPdf {
    
    public static void main(String[] args) throws Exception {
        // Read the encoded Base64 string from the text file
        String encodedString = new String(Files.readAllBytes(Paths.get("C:\\Users\\v1013325\\Desktop\\TODAY\\output.txt")));
        
        // Replace spaces with line breaks as needed
        encodedString = StringUtil.replace(" ", "\r\n", encodedString);

        // Convert the string to a byte array using ISO-8859-1 charset
        byte[] dataByte = encodedString.getBytes("ISO-8859-1");

        // Create a ByteArrayInputStream from the byte array
        ByteArrayInputStream bais = new ByteArrayInputStream(dataByte);

        // Decode the Base64 input stream
        InputStream is = MimeUtility.decode(bais, "base64");

        // Prepare to write the decoded data into a PDF file
        OutputStream os = Files.newOutputStream(Paths.get("C:\\Users\\v1013325\\Desktop\\TODAY\\Document.pdf"));

        // Buffer for reading the decoded data
        byte[] buffer = new byte[1024];
        int bytesRead;

        // Write the decoded data to the output file
        while ((bytesRead = is.read(buffer)) != -1) {
            os.write(buffer, 0, bytesRead);
        }

        // Ensure that all data is written and flush the output stream
        os.flush();
        os.close();
        is.close();
        bais.close();

        System.out.println("Decoded PDF file saved to C:\\Users\\v1013325\\Desktop\\TODAY\\Document.pdf");
    }
}